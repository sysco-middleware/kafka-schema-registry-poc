/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.sysco.middleware.poc.kafkaschemaregistry.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Business record contains name of company and list of customers */
@org.apache.avro.specific.AvroGenerated
public class Business extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1756169051181678605L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Business\",\"namespace\":\"no.sysco.middleware.poc.kafkaschemaregistry.avro\",\"doc\":\"Business record contains name of company and list of customers\",\"fields\":[{\"name\":\"company_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of company\"},{\"name\":\"customers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Customer\",\"fields\":[{\"name\":\"first_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer name\"},{\"name\":\"last_name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Customer last name\"}]}},\"doc\":\"List of customers\"}],\"version\":\"1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Business> ENCODER =
      new BinaryMessageEncoder<Business>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Business> DECODER =
      new BinaryMessageDecoder<Business>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Business> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Business> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Business>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Business to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Business from a ByteBuffer. */
  public static Business fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Name of company */
   private java.lang.String company_name;
  /** List of customers */
   private java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer> customers;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Business() {}

  /**
   * All-args constructor.
   * @param company_name Name of company
   * @param customers List of customers
   */
  public Business(java.lang.String company_name, java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer> customers) {
    this.company_name = company_name;
    this.customers = customers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return company_name;
    case 1: return customers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: company_name = (java.lang.String)value$; break;
    case 1: customers = (java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'company_name' field.
   * @return Name of company
   */
  public java.lang.String getCompanyName() {
    return company_name;
  }


  /**
   * Gets the value of the 'customers' field.
   * @return List of customers
   */
  public java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer> getCustomers() {
    return customers;
  }


  /**
   * Creates a new Business RecordBuilder.
   * @return A new Business RecordBuilder
   */
  public static no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder newBuilder() {
    return new no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder();
  }

  /**
   * Creates a new Business RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Business RecordBuilder
   */
  public static no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder newBuilder(no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder other) {
    return new no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder(other);
  }

  /**
   * Creates a new Business RecordBuilder by copying an existing Business instance.
   * @param other The existing instance to copy.
   * @return A new Business RecordBuilder
   */
  public static no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder newBuilder(no.sysco.middleware.poc.kafkaschemaregistry.avro.Business other) {
    return new no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder(other);
  }

  /**
   * RecordBuilder for Business instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Business>
    implements org.apache.avro.data.RecordBuilder<Business> {

    /** Name of company */
    private java.lang.String company_name;
    /** List of customers */
    private java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer> customers;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.company_name)) {
        this.company_name = data().deepCopy(fields()[0].schema(), other.company_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customers)) {
        this.customers = data().deepCopy(fields()[1].schema(), other.customers);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Business instance
     * @param other The existing instance to copy.
     */
    private Builder(no.sysco.middleware.poc.kafkaschemaregistry.avro.Business other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.company_name)) {
        this.company_name = data().deepCopy(fields()[0].schema(), other.company_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customers)) {
        this.customers = data().deepCopy(fields()[1].schema(), other.customers);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'company_name' field.
      * Name of company
      * @return The value.
      */
    public java.lang.String getCompanyName() {
      return company_name;
    }

    /**
      * Sets the value of the 'company_name' field.
      * Name of company
      * @param value The value of 'company_name'.
      * @return This builder.
      */
    public no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder setCompanyName(java.lang.String value) {
      validate(fields()[0], value);
      this.company_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'company_name' field has been set.
      * Name of company
      * @return True if the 'company_name' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'company_name' field.
      * Name of company
      * @return This builder.
      */
    public no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder clearCompanyName() {
      company_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customers' field.
      * List of customers
      * @return The value.
      */
    public java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer> getCustomers() {
      return customers;
    }

    /**
      * Sets the value of the 'customers' field.
      * List of customers
      * @param value The value of 'customers'.
      * @return This builder.
      */
    public no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder setCustomers(java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer> value) {
      validate(fields()[1], value);
      this.customers = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customers' field has been set.
      * List of customers
      * @return True if the 'customers' field has been set, false otherwise.
      */
    public boolean hasCustomers() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customers' field.
      * List of customers
      * @return This builder.
      */
    public no.sysco.middleware.poc.kafkaschemaregistry.avro.Business.Builder clearCustomers() {
      customers = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Business build() {
      try {
        Business record = new Business();
        record.company_name = fieldSetFlags()[0] ? this.company_name : (java.lang.String) defaultValue(fields()[0]);
        record.customers = fieldSetFlags()[1] ? this.customers : (java.util.List<no.sysco.middleware.poc.kafkaschemaregistry.avro.Customer>) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Business>
    WRITER$ = (org.apache.avro.io.DatumWriter<Business>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Business>
    READER$ = (org.apache.avro.io.DatumReader<Business>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
